# version: '3.8'

# services:
#   auth-service:
#     build: ./auth-service
#     ports:
#       - "5000:5000"
#     env_file:
#       - ./auth-service/.env
#     restart: unless-stopped
#     depends_on:
#       - mongo
#       - redis

#   post-service:
#     build: ./post-service
#     ports:
#       - "5001:5001"
#     env_file:
#       - ./post-service/.env
#     restart: unless-stopped
#     depends_on:
#       - mongo

#   mongo:
#     image: mongo
#     container_name: mongo
#     volumes:
#       - mongo-data:/data/db
#     ports:
#       - "27017:27017"
#     restart: unless-stopped

#   redis:
#     image: redis
#     container_name: redis
#     ports:
#       - "6379:6379"
#     restart: unless-stopped

#   nginx:
#     build: ./nginx
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - auth-service
#       - post-service
#     restart: unless-stopped

# volumes:
#   mongo-data:


# version: '3.8'

# services:
#   auth-service:
#     build: ./auth-service
#     container_name: auth_service
#     ports:
#       - "5000:5000"
#     env_file:
#       - ./auth-service/.env
#     restart: unless-stopped
#     depends_on:
#       - mongo
#       - redis
#     networks:
#       - microservice-net

#   post-service:
#     build: ./post-service
#     container_name: post_service
#     ports:
#       - "5001:5001"
#     env_file:
#       - ./post-service/.env
#     restart: unless-stopped
#     depends_on:
#       - mongo
#     networks:
#       - microservice-net

#   mongo:
#     image: mongo:6.0
#     container_name: mongo_db
#     volumes:
#       - mongo-data:/data/db
#     ports:
#       - "27017:27017"
#     restart: unless-stopped
#     networks:
#       - microservice-net

#   redis:
#     image: redis:7
#     container_name: redis_cache
#     ports:
#       - "6379:6379"
#     restart: unless-stopped
#     networks:
#       - microservice-net

#   nginx:
#     image: nginx:latest
#     container_name: nginx_gateway
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - auth-service
#       - post-service
#     restart: unless-stopped
#     networks:
#       - microservice-net

# volumes:
#   mongo-data:

# networks:
#   microservice-net:
#     driver: bridge


services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"

  auth_service:
    build: ./auth-service
    container_name: auth_service
    ports:
      - "5000:5000"
    environment:
      - MONGO_URL=mongodb://mongo:27017/authdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mongo
      - redis

  post_service:
    build: ./post-service
    container_name: post_service
    ports:
      - "5001:5001"
    environment:
      - MONGO_URL=mongodb://mongo:27017/postdb
    depends_on:
      - mongo

  nginx_gateway:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth_service
      - post_service

volumes:
  mongo_data:

